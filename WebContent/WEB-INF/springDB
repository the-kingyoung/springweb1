# 스프링에서 데이터베이스 연결
1. 환경설정
	1) 컨테이너 선언(dispatcher servlet.xml)
		- DB연결
		- mybatis 공통 xml 선언
		- 사용할 DAO인터페이스 패키지 위치 선언.
	2) mybatis 공통 xml 처리
		- 사용할 vo/dto 등록
		- 개별 업무별 sql저장할 mapper.xml 등록
	3) XXXMapper.xml
		- namespace
		- resultMap/resultType
		- id
		- parameterType
2. DB연결 화면 구현 순서
	1) Controller 선언
	2) View단 선언
	3) DAO 선언(DB 처리)
	4) mybatis 공통 xml 처리
	5) XXXMapper.xml
	6) service처리
	7) Controller에 model 선언
	8) view단에서 model 처리

3. DB 처리시, 익숙해야할 내용
	1) DAO선언과 XXXMapper.xml 연동관계(***중요***)
		dao인터페이스명 == namespace
		메서드명		 == id
		리턴할 객체	 == resultMap/resultType
		매개변수/매개객체== parameterType
		
	2) controller -- service -- dao 연동 처리관계 이해
		각각의 역할 이해

4. DAO와 XXXMapper.xml
	1) dao가 새롭게 추가될 때,
		mybatis.Spring.xml안에
		사용할 vo객체 추가, 사용할 업무단위 XXXMapper.xml 추가 등록
	2) dao를 기준으로 연동처리 관계 설정.
	// springweb.a02_mvc.a03_dao.A01_EmpDao
		public ArrayList<Emp> emplist(Emp sch);
		- 인터페이스명 - namespace : 가능한한 interface명과 패키지명을 복사해 붙인다.
		- 리턴할 객체/변수
			단일 데이터 - resultType으로 설정 
			ex) : public int totAll();
				<select resultType="int">
				
			ex) public Emp getEmp(int empno);
				<select resultType="emp" mybatis.Spring.xml안에 alias 선언된 emp
					
				배열/ArrayList<Vo> - resultMap 일단 상단에 선언한 후, id값으로 설정한다.
			
			ex) : public ArrayList<Emp> empList();
				<resultMap type="emp" id="empResult"/>
				<select resultMap = "empResult">
				
			ex) : public String[] getEnames()
				<resultMap type="java.lang.String" id="strResult"
				<select resultMap = "stResult">
				
		- 입력할 매개변수 - parameterType
			없을 때, emplist();
				선언하지 않는다.
				<select>
			단일 데이터 : 
					emplist(int empno);
				<select parameterType="int"
			단일 객체
					emplist(Emp sch)
				<select parameterType="emp"
				
			배열형 - parameterMap : 입력값이 배열형 객체일 때
					public void insert(HashMap<String,Object> ins);
					<insert parameterType="hashmap"
							${키값}
		- id : 메서드명..